const path = require('path')
// This helper function is not strictly necessary.
// I just don't like repeating the path.join a dozen times.
function srcPath(subdir) {
    return subdir ? path.join(__dirname, 'src', subdir) : path.join(__dirname, 'src')
}

const config = {
  mode: 'development',
  devtool: 'inline-source-map',
  /* The entry point of the application. Webpack uses this information to create the dependency tree which is used to bundle the scripts.*/
  entry: ['./src/index.ts'],
  /* This information is used to give the name of the bundled file and the location of the bundled file. */
  output: {
    path: path.resolve(__dirname, 'dist'),
    filename: 'index.js',
    libraryTarget: 'commonjs2',
  },
  /* The extensions which will be imported or required in the application scripts. */
  resolve: {
    extensions: ['.ts', '.tsx', '.js', '.json'],
    alias: {
      '@': srcPath()
    },
  },
  module: {
    rules: [{
      test: /\.tsx?$/,
      loader: 'ts-loader',
      exclude: /node_modules/
    }]
  },
}

module.exports = config
