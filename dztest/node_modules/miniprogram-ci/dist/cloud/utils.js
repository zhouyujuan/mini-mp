"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.zipToBuffer=exports.zipFile=void 0;const fs=require("fs"),path=require("path"),JSZip=require("jszip"),minimatch=require("minimatch"),minimatchWithList=(i,e)=>{if(!e)return!1;for(const r of e)if(r.startsWith("!")&&!minimatch(i,r))return!1;for(const r of e)if(!r.startsWith("!")&&minimatch(i,r))return!0;return!1},zipFile=(i,{ignore:e,name:r,zip:t=new JSZip,includeRoot:s=!1}={})=>{if(!fs.existsSync(i))return t;const n=fs.lstatSync(i),o=r||path.basename(i);if(n.isSymbolicLink())t.file(o,fs.readlinkSync(i),{unixPermissions:parseInt("120"+parseInt((n.mode&parseInt("777",8)).toString(8),10),8)});else if(n.isDirectory()){s&&t.folder(o);const r=fs.readdirSync(i);for(let n=0,p=r.length;n<p;n++){const p=r[n],f=s?path.posix.join(o,p):p;e&&minimatchWithList(f,e)||exports.zipFile(path.join(i,p),{zip:t,ignore:e,name:f,includeRoot:!0})}}else t.file(o,fs.readFileSync(i),{binary:!0,unixPermissions:n.mode});return t};exports.zipFile=zipFile;const zipToBuffer=(i,e)=>i.generateAsync({type:"nodebuffer",platform:"darwin"===process.platform?"UNIX":"DOS",compression:"DEFLATE",compressionOptions:{level:9}},e);exports.zipToBuffer=zipToBuffer;