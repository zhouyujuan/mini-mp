/// <reference path="../@types/index.d.ts" />
import { IProject } from '../utils/project';
export declare const SIGNATURE_FILE_NAME = "ci.signature";
interface IUploadOptions {
    project: IProject;
    version: string;
    setting?: MiniProgramCI.ICompileSettings;
    desc?: string;
    robot?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30;
    onProgressUpdate?: (task: MiniProgramCI.ITaskStatus | string) => void;
    test?: boolean;
    qrcodeFormat?: 'base64' | 'image' | 'terminal';
    qrcodeOutputDest?: string;
    pagePath?: string;
    searchQuery?: string;
    scene?: number;
    threads?: number;
    useCOS?: boolean;
}
export declare type TSubPackageInfo = Array<{
    name: string;
    size: number;
}>;
export declare type TPluginInfo = Array<{
    pluginProviderAppid: string;
    version: string;
    size: number;
}>;
export interface IUploadResult {
    subPackageInfo?: TSubPackageInfo;
    pluginInfo?: TPluginInfo;
    devPluginId?: string;
}
export declare function upload(options: IUploadOptions): Promise<IUploadResult>;
export {};
