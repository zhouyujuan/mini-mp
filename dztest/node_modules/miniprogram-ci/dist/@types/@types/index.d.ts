/// <reference path="./miniprogram-json/index.d.ts" />

declare namespace MiniProgramCI {
  export interface IStat {
    isFile: boolean
    isDirectory: boolean
    size?: number
  }
  export interface IProject {
    nameMappingFromDevtools?: IStringKeyMap<string>
    appid: string
    type: string
    projectPath: string
    privateKey: string
    miniprogramRoot: string,
    pluginRoot: string,
    attr(): Promise<IProjectAttr>
    stat(prefix: string, filePath: string): IStat | undefined
    getFile(prefix: string, filePath: string): Buffer
    getFileList(prefix: string, extName: string): string[]
    getExtAppid(): Promise<string | void>
    updateFiles: () => void
  }

  export interface IStringKeyMap<T = any> {
    [propName: string]: T
  }
  export interface IValidateResult {
    warning: string
    error: Array<{
      errorType: string
      errorProperty: string
      correctType?: Array<string>
      requireProperty?: string
    }>
  }
  export type FN<R = any> = (...args: any[]) => R
  export type FN1<A = any, R = any> = (a: A) => R
  export type FN2<A = any, B = any, R = any> = (a: A, b: B) => R
  export type FN3<A = any, B = any, C = any, R = any> = (a: A, b: B, c: C) => R
  export type FN4<A = any, B = any, C = any, D = any, R = any> = (a: A, b: B, c: C, d: D) => R

  export interface IAnyObject {
    [key: string]: any
  }

  export interface ICompileSettings {
    es6?: boolean
    es7?: boolean
    minify?: boolean
    codeProtect?: boolean
    minifyJS?: boolean
    minifyWXML?: boolean
    minifyWXSS?: boolean
    autoPrefixWXSS?: boolean
  }

  export interface ITaskStatus {
    id: string,
    message: string
    status: 'doing' | 'done'
  }

  export interface IDevToolsCompileCache { // 给工具开发者工具使用的场景 传入的compileCache
    init: (project: IProject) => Promise<void>,
    get:  (key: string) => any,
    set: (key: string, value: any) => void,
    remove: (key?: string | undefined) => void,
    getFile: (filePath: string, infoKey?: string) => Promise<any>,
    setFile: (filePath: string, value: any, infoKey?: string) => void,
    removeFile: (filePath: string) => void,
    clean: () => void,
    getAllCacheFiles: () => string[],
  }
  export interface IDevtoolsDebugInfo {
    from: 'devtools' | 'ci',
    useNewCompileModule: boolean,
    devtoolsVersion: string,
    compileSetting: MiniProgramCI.IAnyObject,
    ciVersion: string,
  }
  export interface ICompileOptions {
    nameMapping?: IStringKeyMap<string>, // 工具传过来的nameMapping
    setting?: ICompileSettings,
    onProgressUpdate?: (task: ITaskStatus) => void,
    // 给工具开发者工具使用的场景 传入的compileCache
    devToolsCompileCache?: IDevToolsCompileCache,
    __compileDebugInfo__?: IDevtoolsDebugInfo,
  }

  export interface IProjectAttr {
    platform: boolean
    appType: number
    gameApp?: boolean
    isSandbox: boolean
    released: boolean
    setting: {
      // MaxLocalstorageSize: number
      MaxCodeSize: number
      // MaxWebviewDepth: number
      // MaxBackgroundLifespan: number
      // MaxRequestConcurrent: number
      // MaxUploadConcurrent: number,
      // MaxDownloadConcurrent: number
      // MaxFileStorageSize: number
      // ExpiresAtList: number
      // BackgroundNetworkInterruptedTimeout: number
      // CanKeepAliveByAudioPlay: number
      // LifeSpanBeforeSuspend: number
      // LifeSpanAfterSuspend: number
      // MaxWebsocketConnect: number
      // ExpendedMaxWebviewDepth: number
      // ActualWebviewDepth: number
      // WebsocketSkipPortCheck: number
      MaxSubpackageSubCodeSize: number
      MaxSubpackageFullCodeSize: number
      // MaxWorkerConcurrent: number
      // ScanCodeEnableZZM: number
      // MaxPluginSdkReadmeSize: number
      // CanPreFetchData: number
      // CanPeriodFetchData: number
      // PeriodFetchData: number
      // TLSSkipHostnameCheck: number
      NavigateMiniprogramLimit: number
      // OpendataMaxLocalstorageSize: number
      // OpendataMaxFileStorageSize: number
      // MaxTempFileStorageSize: number
      // OpenWxaIap: number
      // GuaranteeFlag: number
      // CanShowLoadingAdvert: number
      MaxSubPackageLimit: number

      MinTabbarCount: number
      MaxTabbarCount: number
      MaxTabbarIconSize: number
    }
  }
  export interface IWarnItem {
    jsPath: string
    code: string
    tips: string
    msg: string
    startLine?: number
    endLine?: number
  }

}
