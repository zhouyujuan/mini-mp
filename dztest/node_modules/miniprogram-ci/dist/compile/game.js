"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.compile=void 0;const path=require("path"),getGameJSON=require("../json/game"),projectconfig_1=require("../json/projectconfig"),common_1=require("./common"),taskstatus_1=require("../utils/taskstatus"),config_1=require("../config"),common_2=require("../utils/common"),locales=require("../utils/locales/locales"),white_ext_list_1=require("../utils/white_ext_list"),lodash_1=require("lodash"),uglifyfilenames_1=require("../utils/uglifyfilenames");async function compileGameJSON(e,o){const{onProgressUpdate:t=(()=>{})}=o,i=new taskstatus_1.TaskStatus("game.json");t(i);const a=await getGameJSON(e,!1);return i.done(),t(i),a}function getSpecialPackagePaths(e){const o=[];return e.openDataContext&&o.push(e.openDataContext),e.workers&&o.push(e.workers),e.subPackages&&e.subPackages.forEach(e=>{if(e.independent){const t=e.root.replace(/^\//,"");!/\.js$/.test(t)&&o.push(t)}}),o.forEach((e,t)=>{e.endsWith("/")||(o[t]=e+"/")}),o}async function compile(e,o){var t;const i=await projectconfig_1.getProjectConfigJSON(e,!1);!1===(await e.attr()).gameApp&&common_2.throwError({filePath:"",msg:locales.config.PROJECT_TYPE_ERROR.format(e.appid,locales.config.MINI_PROGRAM),code:config_1.PROJECT_TYPE_ERROR});const a=i.miniprogramRoot||"",{GameWhiteList:s}=await white_ext_list_1.getWhiteExtList(),n=e.getFileList(a,"").filter(common_1.isNotIgnoredByProjectConfig.bind(null,i,a)).filter(e=>s.has(path.posix.extname(e))),r=await compileGameJSON(e,o);e.stat(a,"game.js")||common_2.throwError({msg:locales.config.FILE_NOT_FOUND.format(path.posix.join(a,"game.js")),filePath:path.posix.join(a,"game.js"),code:config_1.FILE_NOT_FOUND});const c=n.filter(e=>".js"===path.posix.extname(e)).map(e=>path.posix.relative(a,e)),m=getSpecialPackagePaths(r);let l=[...c];for(const e of m){const o=c.filter(o=>o.startsWith(e));l=lodash_1.xorWith(c,o)}let p=await common_1.compileJSFiles(e,l,a,o),g="@babel/runtime";o.setting&&o.setting.es7&&(g=await common_1.getBabelRoot(e));for(const t of m){let i=c.filter(e=>e.startsWith(t));i=i.map(e=>e.replace(new RegExp("^"+t),""));const s=await common_1.compileJSFiles(e,i,path.posix.join(a,t),o);p=Object.assign(Object.assign({},p),s)}const f=n.filter(e=>e!==path.posix.join(a,"game.json")&&".js"!==path.posix.extname(e)),_=await common_1.compileOther(e,f,o),u=await common_1.getUploadProjectConfig(e,i);let h=Object.assign(Object.assign({},p),_);if(e.type===config_1.COMPILE_TYPE.miniGame){if(u.miniprogramRoot&&"."!==u.miniprogramRoot&&"./"!==u.miniprogramRoot){const o={};for(const t in h)o[path.posix.relative(e.miniprogramRoot,t)]=h[t];h=o}u.miniprogramRoot="",h["game.json"]=JSON.stringify(r)}else h[path.posix.join(u.miniprogramRoot||"","game.json")]=JSON.stringify(r);return u.__compileDebugInfo__=o.__compileDebugInfo__||{},h["project.config.json"]=JSON.stringify(u),e.type===config_1.COMPILE_TYPE.miniGame&&(null===(t=o.setting)||void 0===t?void 0:t.codeProtect)&&(h=await uglifyfilenames_1.uglifyFileNames(e,h)),h}exports.compile=compile;