"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.uglifyFileNames=exports.getGameNameMapping=exports.getNameMapping=void 0;const path=require("path"),config_1=require("../config"),CodeError=require("./error"),tools_1=require("../utils/tools"),getGameJSON=require("../json/game"),app_merge_ext_1=require("../json/app/app_merge_ext"),file_flatter_1=require("./file_flatter"),url_config_1=require("./url_config"),request_1=require("./request"),sign_1=require("./sign"),jsonParse_1=require("../utils/jsonParse"),locales=require("./locales/locales"),config=require("../config"),common_1=require("../utils/common");function checkPrefix(e,t){for(const r of t)if(0===e.indexOf(r))return r;return""}const getNameMapping=async(e,t)=>{if(process.env.isDevtools)return e.nameMappingFromDevtools||{};{const r=e.getFileList(t,".js").map(e=>path.posix.relative(t,e));try{let a={};if("miniProgram"===e.type){const o=await app_merge_ext_1.getAppJSON(e,!1);a=await getMiniProgramNameMapping(e,t,o,r)}if("miniGame"===e.type){const t=await getGameJSON(e,!1);a=await exports.getGameNameMapping(e,t,r)}return a}catch(e){throw new CodeError(e.toString(),config_1.CODE_PROTECT_TRANSLATE_FILENAME)}}};exports.getNameMapping=getNameMapping;const getMiniProgramNameMapping=async(e,t,r,a)=>{const o=[{type:"file",value:"app.js"},{type:"regex",value:/\/miniprogram_npm\/|^miniprogram_npm\//},{type:"folder",value:"functional-pages/"}],i=e.getFileList(t,".wxml").map(e=>path.posix.relative(t,e));for(const e of i)o.push({type:"file",value:""+e.replace(/\.wxml$/,".js")});let s=[];return r.subPackages&&(s=r.subPackages.map(e=>e.root)),r.widgets&&r.widgets.length>0&&r.widgets.forEach(e=>{o.push({type:"folder",value:/\/$/.test(e.path)?e.path:e.path+"/"})}),r.workers&&o.push({type:"folder",value:r.workers}),await _getNameMapping(e,a,o,s)},getGameNameMapping=async(e,t,r)=>{const a=[{type:"file",value:"game.js"},{type:"regex",value:/\/miniprogram_npm\/|^miniprogram_npm\//}],o=[];if(t.subPackages&&t.subPackages.forEach(e=>{const t=e.root.replace(/^\//,"");/\.js$/.test(t)?(a.push({type:"file",value:t}),o.push(path.posix.dirname(t))):(a.push({type:"file",value:path.posix.join(t,"./game.js")}),o.push(t))}),t.openDataContext&&(a.push({type:"file",value:path.posix.join(t.openDataContext,"index.js")}),o.push(t.openDataContext)),t.workers&&a.push({type:"folder",value:t.workers}),t.plugins)for(const e in t.plugins){const r=t.plugins[e];if(r.path){const e=r.path.replace(/^\//,"");a.push({type:"folder",value:e})}}return await _getNameMapping(e,r,a,o)};async function _getNameMapping(e,t,r,a=[]){const o={},i=[];for(const e of t){let t=!1;for(const a of r)if("file"===a.type&&a.value===e||"folder"===a.type&&0===e.indexOf(a.value)||"regex"===a.type&&a.value.test(e)){t=!0;break}t||i.push(e)}const s=await sign_1.getSignature(e.privateKey,e.appid),{body:n}=await request_1.request({url:url_config_1.TRANSLATE_FILENAME,method:"post",body:JSON.stringify({appid:e.appid,signature:s,arrPaths:i}),headers:{"content-type":"application/json"}}),p=jsonParse_1.jsonRespParse(n,url_config_1.TRANSLATE_FILENAME);if(0===p.errCode)return p.body.pairs.forEach(e=>{const t=checkPrefix(e.origin,a);o[e.origin]=tools_1.normalizePath(path.posix.join(t,e.translated+".js"))}),o;throw new Error(`errCode: ${p.errCode} errMsg: ${p.errMsg}`)}async function uglifyFileNames(e,t){let r={miniprogramRoot:""};try{r=JSON.parse(t["project.config.json"].toString())}catch(e){}let a=tools_1.normalizePath(r.miniprogramRoot);"."===a&&(a="");const o=await exports.getNameMapping(e,e.miniprogramRoot),i=Object.keys(t).filter(e=>e.endsWith(".js")),s={};for(const e of i){const r=e,n=t[e].toString(),p=t[e+".map"]||"";s[r]=file_flatter_1.tryTranslateSingleFile({rootPath:a,code:n,nameMapping:o,check:!0,sourceFileName:e,sourceMap:p,filePath:e,miniProgramJSFiles:i})}const n=Object.keys(t),p={};for(const e of n){p[tools_1.normalizePath(e)]=t[e]}for(const e in s){const t=tools_1.normalizePath(e);let r=t;const i=s[e];if(i.errMsg){if(!process.env.isDevtools)throw new Error("\n"+locales.config.COULD_NOT_USE_CODE_PROTECT+"\n"+i.errMsg);common_1.throwError({code:config.FILE_FLAT_ERR,msg:locales.config.COULD_NOT_USE_CODE_PROTECT+"\n"+i.errMsg,filePath:t})}const n=path.posix.relative(a,e);o[n]&&(r=tools_1.normalizePath(path.posix.join(a,o[n])),delete p[t],delete p[t+".map"]),p[r]=i.translatedContent,i.translatedSourceMap&&(p[r+".map"]=i.translatedSourceMap)}return p}exports.getGameNameMapping=getGameNameMapping,exports.uglifyFileNames=uglifyFileNames;