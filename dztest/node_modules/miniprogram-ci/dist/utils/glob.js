"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.glob=void 0;const path=require("path"),minimatch_1=require("minimatch"),fs=require("./fs"),tools_1=require("./tools"),log=require("./log");function ignoreMap(r){let e=null;if("/**"===r.slice(-3)){const t=r.replace(/(\/\*\*)+$/,"");e=new minimatch_1.Minimatch(t,{dot:!0})}return{matcher:new minimatch_1.Minimatch(r,{dot:!0}),gmatcher:e}}async function readdir(r,e){const{ignore:t,cwd:n}=e;return(await fs.readdir(path.posix.join(n,r))).filter(e=>{const n=tools_1.normalizePath(path.posix.join(r,e)),o=isIgnored(n,t);return o&&log.debug(`file '${n}' has been ignore`),!o})}function childrenIgnored(r,e){return!!e.length&&e.some((function(e){return!(!e.gmatcher||!e.gmatcher.match(r))}))}function isIgnored(r,e){return!!e.length&&e.some((function(e){return e.matcher.match(r)||!(!e.gmatcher||!e.gmatcher.match(r))}))}async function _glob(r,e){const{cwd:t,ignore:n,dir:o}=e,i=path.posix.join(t,r),a=await fs.stat(i);if(!a)return[];if(a.isFile())return[tools_1.normalizePath(r)];if(a.isDirectory()){if(childrenIgnored(r,n))return log.debug(`directory '${i}' has been ignore`),[];let t=[];o&&r&&t.push(tools_1.normalizePath(r+"/"));const a=await readdir(r,e);for(const n of a){const o=await _glob(path.posix.join(r,n),e);t=t.concat(o)}return t}return[]}async function glob(r){const{cwd:e,ignore:t,dir:n=!1}=r;let o=[];return Array.isArray(t)&&(o=t.map(ignoreMap)),_glob("",{cwd:e,ignore:o,dir:n})}exports.glob=glob;