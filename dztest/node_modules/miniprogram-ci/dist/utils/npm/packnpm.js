"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.packNpmManually=exports.packNpm=void 0;const config_1=require("../../config"),_=require("lodash"),rimraf=require("rimraf"),path=require("path"),fs=require("fs"),glob=require("glob"),acorn=require("acorn"),sourcemap=require("source-map"),filterdeps=require("./filterdeps"),locales=require("../locales/locales"),CodeError=require("../../utils/error"),log=require("../../utils/log"),projectconfig_1=require("../../json/projectconfig"),NPM_RECORD={start_time:Date.now(),pack_time:0,miniprogram_pack_num:0,other_pack_num:0,warn_not_found_num:0,warn_require_var_num:0,warn_require_rename_num:0,extra1:"",extra2:"",extra3:""},REPORT_LIST=["pack_time","miniprogram_pack_num","other_pack_num","warn_not_found_num","warn_require_var_num","warn_require_rename_num","extra1","extra2","extra3"];function wrap(e,t){return function(...n){if(n.length){const e=n.pop();"function"!=typeof e&&n.push(e)}return new Promise((function(r,a){n.push((function(e,t){e?a(e):r(t)})),e.apply(t||null,n)}))}}const statSync=wrap(fs.stat),mkdirSync=wrap(fs.mkdir),readFileSync=wrap(fs.readFile),writeFileSync=wrap(fs.writeFile),accessSync=wrap(fs.access),renameSync=wrap(fs.rename),globSync=wrap(glob);let seed=+new Date;function getId(){return++seed}function startRecord(){NPM_RECORD.start_time=Date.now(),REPORT_LIST.forEach(e=>NPM_RECORD[e]=0===e.indexOf("extra")?"":0)}function endRecord(e){NPM_RECORD.pack_time=Date.now()-NPM_RECORD.start_time;const t={};REPORT_LIST.forEach(e=>t[e]=NPM_RECORD[e]);try{e&&e(t)}catch(e){}}async function recursiveMkdir(e){const t=path.posix.dirname(e);try{await accessSync(t)}catch(e){await recursiveMkdir(t)}try{await accessSync(e);const t=await statSync(e);t&&!t.isDirectory()&&(await renameSync(e,e+".bak"),log.warn(e+" already exists but is not a directory, so it will be rename to a file with the suffix ending in '.bak'"),await mkdirSync(e))}catch(t){await mkdirSync(e)}}async function copyFile(e,t){const n=await readFileSync(e);await writeFile(n,t)}async function writeFile(e,t){await recursiveMkdir(path.posix.dirname(t)),await writeFileSync(t,e)}function walkNode(e,t){t(e),Object.keys(e).forEach(n=>{const r=e[n];Array.isArray(r)&&r.forEach(e=>{e&&e.type&&walkNode(e,t)}),r&&r.type&&walkNode(r,t)})}function parseDeps(e,t,n){const r=[];let a,o=[];try{a=acorn.parse(e,{sourceType:"module",locations:!0,allowHashBang:!0,onComment(t,n,r,a){t||"#"!==e[r]||o.push({start:r,end:a,adjustContent:""})}})}catch(e){throw console.error(`parse js file (${t}) failed`),e}return walkNode(a,a=>{const i=a.callee,s=a.arguments;if("CallExpression"===a.type&&i&&"Identifier"===i.type&&"require"===i.name&&s&&1===s.length&&("Literal"===s[0].type?r.push(s[0].value):(n.push({jsPath:t,code:e.substring(a.start,a.end),startLine:a.loc.start.line,endLine:a.loc.end.line,tips:"require variable is not allowed",msg:locales.config.NOT_ALLOWED_REQUIRE_VAR.format()}),NPM_RECORD.warn_require_var_num++)),"ExpressionStatement"===a.type&&a.expression&&"use strict"===a.expression.value&&o.push({start:a.start,end:a.end,adjustContent:""}),"ImportDeclaration"===a.type){const e=a.source,t=a.specifiers,n={start:a.start,end:a.end,adjustContent:""},i=[];e&&"Literal"===e.type&&(r.push(e.value),i.push(`var __TEMP__ = require('${e.value}');`)),t&&Array.isArray(t)&&t.forEach(e=>{if("ImportSpecifier"===e.type){const t=e.local,n=e.imported;"Identifier"===t.type&&"Identifier"===n.type&&i.push(`var ${t.name} = __TEMP__['${n.name}'];`)}else if("ImportDefaultSpecifier"===e.type){const t=e.local;"Identifier"===t.type&&i.push(`var ${t.name} = __REQUIRE_DEFAULT__(__TEMP__);`)}else if("ImportNamespaceSpecifier"===e.type){const t=e.local;"Identifier"===t.type&&i.push(`var ${t.name} = __REQUIRE_WILDCARD__(__TEMP__);`)}}),n.adjustContent=i.join(""),o.push(n)}if("ExportNamedDeclaration"===a.type){const t=a.source,n=a.specifiers,i=a.declaration;let s=!1;const p={start:a.start,end:a.end,adjustContent:""},c=['if (!exports.__esModule) Object.defineProperty(exports, "__esModule", { value: true });'];if(t&&"Literal"===t.type&&(r.push(t.value),c.push(`var __TEMP__ = require('${t.value}');`),s=!0),i){if("VariableDeclaration"===i.type){const t=i.declarations;t&&Array.isArray(t)&&t.forEach(t=>{if("VariableDeclarator"===t.type){const n=t.id,r=t.init;n&&"Identifier"===n.type&&(p.notAddLines=!0,c.push(`var ${n.name} = exports.${n.name} = ${r?e.substring(r.start,r.end):"undefined"};`))}})}else if("FunctionDeclaration"===i.type){const t=i.id;t&&"Identifier"===t.type&&(p.notAddLines=!0,c.push(`${e.substring(i.start,i.end)};exports.${t.name} = ${t.name}`))}else if("ClassDeclaration"===i.type){const t=i.id;t&&"Identifier"===t.type&&(p.notAddLines=!0,c.push(`${e.substring(i.start,i.end)};exports.${t.name} = ${t.name}`))}}else;n&&Array.isArray(n)&&n.forEach(e=>{if("ExportSpecifier"===e.type){const t=e.local,n=e.exported;"Identifier"===t.type&&"Identifier"===n.type&&c.push(`Object.defineProperty(exports, '${n.name}', { enumerable: true, configurable: true, get: function() { return ${s?"__TEMP__.":""}${t.name}; } });`)}}),p.adjustContent=c.join(""),o.push(p)}else if("ExportAllDeclaration"===a.type){const e=a.source,t={start:a.start,end:a.end,adjustContent:""},n=['if (!exports.__esModule) Object.defineProperty(exports, "__esModule", { value: true });'];e&&"Literal"===e.type&&(r.push(e.value),n.push(`var __TEMP__ = require('${e.value}');`)),n.push('Object.keys(__TEMP__).forEach(function(k) { if (k === "default" || k === "__esModule") return; Object.defineProperty(exports, k, { enumerable: true, configurable: true, get: function() { return __TEMP__[k]; } }); });'),t.adjustContent=n.join(""),o.push(t)}else if("ExportDefaultDeclaration"===a.type){const t=a.declaration,n={start:a.start,end:a.end,adjustContent:""},r=['if (!exports.__esModule) Object.defineProperty(exports, "__esModule", { value: true });'];if(t)if(n.notAddLines=!0,t.id){const n=t.id;r.push(`${e.substring(t.start,t.end)};exports.default = ${n.name}`)}else r.push(`exports.default = ${e.substring(t.start,t.end)};`);n.adjustContent=r.join(""),o.push(n)}const p=a.expression;"ExpressionStatement"===a.type&&p&&"AssignmentExpression"===p.type&&"Identifier"===p.right.type&&"require"===p.right.name&&(n.push({jsPath:t,code:e.substring(a.start,a.end),startLine:a.loc.start.line,endLine:a.loc.end.line,tips:"assign require function to a variable is not allowed",msg:locales.config.NOT_ALLOWED_REQUIRE_ASSIGN.format()}),NPM_RECORD.warn_require_rename_num++);const c=a.declarations;"VariableDeclaration"===a.type&&c.length>0&&c.forEach(r=>{const o=r.init;"VariableDeclarator"===r.type&&o&&"Identifier"===o.type&&"require"===o.name&&(n.push({jsPath:t,code:e.substring(a.start,a.end),startLine:a.loc.start.line,endLine:a.loc.end.line,tips:"assign require function to a variable is not allowed",msg:locales.config.NOT_ALLOWED_REQUIRE_ASSIGN.format()}),NPM_RECORD.warn_require_rename_num++)})}),o=o.sort((e,t)=>t.start-e.start),o.forEach(t=>{const n=e.substring(t.start,t.end),r=t.notAddLines?0:n.split("\n").length;e=e.substring(0,t.start)+t.adjustContent+new Array(r).join("\n")+e.substring(t.end)}),{deps:r,parsedContent:e}}async function parseJs(e,t,n,r,a,o){if(a[t=path.posix.normalize(t)])return a[t];const i=await readFileSync(t,"utf8"),s=getId(),p=path.posix.relative(e,t);if(/\.json$/.test(t)){const e={id:s,name:p,content:"module.exports = "+i,deps:[],depsMap:{}};return a[t]=s,r.push(e),s}const{deps:c,parsedContent:u}=parseDeps(i,t,o),_={id:s,name:p,content:u,deps:c,depsMap:{}};a[t]=s,r.push(_);for(const i of c){let s,p=path.posix.join(path.posix.dirname(t),i);if(!/\.js$/.test(p)&&!/\.json$/.test(p)){const e=p+".js";try{await accessSync(e),p=e}catch(e){}}try{const e=await statSync(p);e&&e.isDirectory()&&(p=path.posix.join(p,"index.js"))}catch(e){}/\.js$/.test(p)||/\.json$/.test(p)||(p+=".js");try{await accessSync(p),s=await parseJs(e,p,n,r,a,o)}catch(e){}s&&(_.depsMap[i]=s)}return s}function addJsToMap(e,t,n,r){const a=t.split("\n").length;for(let o=1;o<=a;o++)e.addMapping({generated:{line:r+o,column:0},original:{line:o,column:0},source:n}),e.setSourceContent(n,t)}async function packJs(e,t,n){try{const t=await statSync(e);t&&t.isDirectory()&&(e=path.posix.join(e,"index.js"))}catch(e){}/\.js$/.test(e)||/\.json$/.test(e)||(e+=".js");try{await accessSync(e)}catch(t){return n.push({jsPath:e,code:"",tips:"entry file is not found",msg:locales.config.NOT_FOUND_NPM_ENTRY.format()}),void NPM_RECORD.warn_not_found_num++}const r=new sourcemap.SourceMapGenerator({file:"index.js"}),a=[];await parseJs(path.posix.dirname(e),e,t,a,{},n);const o=["module.exports = (function() {","var __MODS__ = {};","var __DEFINE__ = function(modId, func, req) { var m = { exports: {}, _tempexports: {} }; __MODS__[modId] = { status: 0, func: func, req: req, m: m }; };",'var __REQUIRE__ = function(modId, source) { if(!__MODS__[modId]) return require(source); if(!__MODS__[modId].status) { var m = __MODS__[modId].m; m._exports = m._tempexports; var desp = Object.getOwnPropertyDescriptor(m, "exports"); if (desp && desp.configurable) Object.defineProperty(m, "exports", { set: function (val) { if(typeof val === "object" && val !== m._exports) { m._exports.__proto__ = val.__proto__; Object.keys(val).forEach(function (k) { m._exports[k] = val[k]; }); } m._tempexports = val }, get: function () { return m._tempexports; } }); __MODS__[modId].status = 1; __MODS__[modId].func(__MODS__[modId].req, m, m.exports); } return __MODS__[modId].m.exports; };',"var __REQUIRE_WILDCARD__ = function(obj) { if(obj && obj.__esModule) { return obj; } else { var newObj = {}; if(obj != null) { for(var k in obj) { if (Object.prototype.hasOwnProperty.call(obj, k)) newObj[k] = obj[k]; } } newObj.default = obj; return newObj; } };","var __REQUIRE_DEFAULT__ = function(obj) { return obj && obj.__esModule ? obj.default : obj; };"];if(a.length){const e=a.shift();o.push(`__DEFINE__(${e.id}, function(require, module, exports) {`),addJsToMap(r,e.content,e.name,o.length),o.push(e.content),o.push(`}, function(modId) {var map = ${JSON.stringify(e.depsMap)}; return __REQUIRE__(map[modId], modId); })`);for(const e of a)o.push(`__DEFINE__(${e.id}, function(require, module, exports) {`),addJsToMap(r,e.content,e.name,o.length),o.push(e.content),o.push(`}, function(modId) { var map = ${JSON.stringify(e.depsMap)}; return __REQUIRE__(map[modId], modId); })`);o.push(`return __REQUIRE__(${e.id});`)}return o.push("})()"),o.push("//# sourceMappingURL=index.js.map"),{js:o.join("\n"),map:r.toString()}}async function checkIsMiniprogramPack(e,t){let n="miniprogram_dist";t.miniprogram&&"string"==typeof t.miniprogram&&(n=t.miniprogram);try{const t=path.posix.join(e,n);await accessSync(t);const r=await statSync(t);if(r&&r.isDirectory())return t}catch(e){}return""}async function packNpm(e,t={}){const n=e.projectPath,r=e.type,a=await projectconfig_1.getProjectConfigJSON(e),o=a.pluginRoot||"",i=a.miniprogramRoot||"",s="miniProgramPlugin"===r||"miniprogramGamePlugin"===r,{ignores:p,reporter:c}=t;if(!n)throw new CodeError(locales.config.SHOULD_NOT_BE_EMPTY.format("projectPath"),config_1.PARAM_ERROR);if("miniProgramPlugin"===r&&!o)throw new CodeError(locales.config.SHOULD_NOT_BE_EMPTY.format('project.config.json "pluginRoot"'),config_1.PARAM_ERROR);startRecord();const u=path.isAbsolute(n)?n:path.posix.join(process.cwd(),n),d=[{searchRoot:path.posix.join(u,i),paths:await globSync("**/package.json",{cwd:path.posix.join(u,i),nodir:!0,dot:!0,ignore:(p||[]).concat("**/node_modules/**")})}];s&&d.push({searchRoot:path.posix.join(u,o),paths:await globSync("**/package.json",{cwd:path.posix.join(u,o),nodir:!0,dot:!0,ignore:(p||[]).concat("**/node_modules/**")})});_.flattenDeep(d.map(e=>e.paths.map(t=>path.posix.join(e.searchRoot,path.dirname(t),"miniprogram_npm")))).forEach(e=>rimraf.sync(e));const l=[];for(const e of d)for(const t of e.paths){const n=path.dirname(path.posix.join(e.searchRoot,t)),r=_.xorWith(e.paths,[t]).map(e=>path.posix.join(path.posix.dirname(e),"/**")).filter(e=>"**"!==e);let a=await globSync("**/package.json",{cwd:n.replace(/\\/g,"/"),nodir:!0,dot:!0,ignore:(p||[]).concat(r)});if(a=await filterdeps(n,a),a&&a.length)for(const e of a){const t=path.posix.join(n,e);let r=await readFileSync(t,"utf8");const a=path.dirname(t);let o=a.replace(/([\b\/\\])node_modules([\b\/\\])/g,(e,t,n)=>`${t}miniprogram_npm${n}`),i=path.basename(o);const s=i.split("@");s.length&&(i=s.pop()||""),o=o.replace(path.basename(o),i),r=JSON.parse(r);const p=path.posix.join(a,r.main||"index.js"),c=await checkIsMiniprogramPack(a,r);if(c){const e=await globSync("**/*",{cwd:c.replace(/\\/g,"/"),nodir:!0,dot:!0,ignore:"**/node_modules/**"});for(const t of e)await copyFile(path.posix.join(c,t),path.posix.join(o,t));NPM_RECORD.miniprogram_pack_num++}else{const e=await packJs(p,o,l);if(!e)continue;await writeFile(e.js,path.posix.join(o,"./index.js")),await writeFile(e.map,path.posix.join(o,"./index.js.map")),NPM_RECORD.other_pack_num++}}}if(endRecord(c),NPM_RECORD.miniprogram_pack_num+NPM_RECORD.other_pack_num<=0)throw new Error("__NO_NODE_MODULES__ "+locales.config.NOT_FOUND_NODE_MODULES.format());return"function"==typeof e.updateFiles&&e.updateFiles(),l}async function packNpmManually(e){let{packageJsonPath:t,miniprogramNpmDistDir:n}=e;const r=e.ignores||[],a={pack_time:0,miniprogram_pack_num:0,other_pack_num:0,warn_not_found_num:0,warn_require_var_num:0,warn_require_rename_num:0},o=[];if(!n)throw new Error("param miniprogramNpmDistDir is required");if(!t)throw new Error("param packageJsonPath is required");if(path.isAbsolute(n)||(n=path.join(process.cwd(),n)),path.isAbsolute(t)||(t=path.join(process.cwd(),t)),!fs.existsSync(t))throw new Error(`param packageJsonPath: ${t} file is not exited`);const i=path.dirname(t);let s=await globSync("**/package.json",{cwd:i.replace(/\\/g,"/"),nodir:!0,dot:!0,ignore:r||[]});if(s=await filterdeps(i,s),!s||!s.length)return log.warn("No miniprogram_npm package was built."),{miniProgramPackNum:0,otherNpmPackNum:0,warnList:[]};s=s.filter(e=>e.startsWith("node_modules"));for(const e of s){const t=path.posix.join(i,e);let r=await readFileSync(t,"utf8");const s=path.dirname(t);let p=s.replace(/([\b\/\\])node_modules([\b\/\\])/g,(e,t,n)=>`${t}miniprogram_npm${n}`);p=path.posix.normalize(path.posix.join(n,"miniprogram_npm",p.split(/[\/\\]miniprogram_npm[\/\\]/)[1]));let c=path.basename(p);const u=c.split("@");u.length&&(c=u.pop()||""),p=p.replace(path.basename(p),c),r=JSON.parse(r);const _=path.posix.join(s,r.main||"index.js"),d=await checkIsMiniprogramPack(s,r);if(d){const e=await globSync("**/*",{cwd:d.replace(/\\/g,"/"),nodir:!0,dot:!0,ignore:"**/node_modules/**"});for(const t of e)await copyFile(path.posix.join(d,t),path.posix.join(p,t));a.miniprogram_pack_num++}else{const e=await packJs(_,p,o);if(!e)continue;await writeFile(e.js,path.posix.join(p,"./index.js")),await writeFile(e.map,path.posix.join(p,"./index.js.map")),a.other_pack_num++}}return{miniProgramPackNum:a.miniprogram_pack_num,otherNpmPackNum:a.other_pack_num,warnList:o}}exports.packNpm=packNpm,exports.packNpmManually=packNpmManually;