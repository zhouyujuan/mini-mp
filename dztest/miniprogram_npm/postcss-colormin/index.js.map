{"version":3,"sources":["index.js","colours.js","keywords.json","lib/toShorthand.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA,ACHA;AFOA,ADGA,AENA,ACHA;AFOA,ADGA,AENA,ACHA;AFOA,ADGA,AENA,ACHA;AFOA,ADGA,AENA,ACHA;AFOA,ADGA,AENA,ACHA;AFOA,ADGA,AENA,ACHA;AFOA,ADGA,AENA,ACHA;AFOA,ADGA,AENA,ACHA;AFOA,ADGA,AENA,ACHA;AFOA,ADGA,AENA,ACHA;AFOA,ADGA,AENA,ACHA;AFOA,ADGA,AENA,ACHA;AFOA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _browserslist = require(\"browserslist\");\n\nvar _browserslist2 = _interopRequireDefault(_browserslist);\n\nvar _postcss = require(\"postcss\");\n\nvar _postcss2 = _interopRequireDefault(_postcss);\n\nvar _postcssValueParser = require(\"postcss-value-parser\");\n\nvar _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);\n\nvar _colours = require(\"./colours\");\n\nvar _colours2 = _interopRequireDefault(_colours);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction walk(parent, callback) {\n    parent.nodes.forEach((node, index) => {\n        const bubble = callback(node, index, parent);\n\n        if (node.nodes && bubble !== false) {\n            walk(node, callback);\n        }\n    });\n}\n\n/*\n * IE 8 & 9 do not properly handle clicks on elements\n * with a `transparent` `background-color`.\n *\n * https://developer.mozilla.org/en-US/docs/Web/Events/click#Internet_Explorer\n */\n\nfunction hasTransparentBug(browser) {\n    return ~[\"ie 8\", \"ie 9\"].indexOf(browser);\n}\n\nexports.default = _postcss2.default.plugin(\"postcss-colormin\", () => {\n    return (css, result) => {\n        const resultOpts = result.opts || {};\n        const browsers = (0, _browserslist2.default)(null, {\n            stats: resultOpts.stats,\n            path: __dirname,\n            env: resultOpts.env\n        });\n        const isLegacy = browsers.some(hasTransparentBug);\n        const colorminCache = {};\n        const cache = {};\n\n        css.walkDecls(decl => {\n            if (/^(composes|font|filter|-webkit-tap-highlight-color)/i.test(decl.prop)) {\n                return;\n            }\n\n            if (cache[decl.value]) {\n                decl.value = cache[decl.value];\n\n                return;\n            }\n\n            const parsed = (0, _postcssValueParser2.default)(decl.value);\n\n            walk(parsed, (node, index, parent) => {\n                if (node.type === \"function\") {\n                    if (/^(rgb|hsl)a?$/i.test(node.value)) {\n                        const { value } = node;\n\n                        node.value = (0, _colours2.default)((0, _postcssValueParser.stringify)(node), isLegacy, colorminCache);\n                        node.type = \"word\";\n\n                        const next = parent.nodes[index + 1];\n\n                        if (node.value !== value && next && (next.type === \"word\" || next.type === \"function\")) {\n                            parent.nodes.splice(index + 1, 0, {\n                                type: \"space\",\n                                value: \" \"\n                            });\n                        }\n                    } else if (node.value.toLowerCase() === \"calc\") {\n                        return false;\n                    }\n                } else if (node.type === \"word\") {\n                    node.value = (0, _colours2.default)(node.value, isLegacy, colorminCache);\n                }\n            });\n\n            const optimizedValue = parsed.toString();\n\n            decl.value = optimizedValue;\n            cache[decl.value] = optimizedValue;\n        });\n    };\n});","\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _color = require('color');\n\nvar _color2 = _interopRequireDefault(_color);\n\nvar _keywords = require('./keywords.json');\n\nvar _keywords2 = _interopRequireDefault(_keywords);\n\nvar _toShorthand = require('./lib/toShorthand');\n\nvar _toShorthand2 = _interopRequireDefault(_toShorthand);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst shorter = (a, b) => (a && a.length < b.length ? a : b).toLowerCase();\n\nexports.default = (colour, isLegacy = false, cache = false) => {\n    const key = colour + \"|\" + isLegacy;\n\n    if (cache && cache[key]) {\n        return cache[key];\n    }\n\n    try {\n        const parsed = (0, _color2.default)(colour.toLowerCase());\n        const alpha = parsed.alpha();\n\n        if (alpha === 1) {\n            const toHex = (0, _toShorthand2.default)(parsed.hex().toLowerCase());\n            const result = shorter(_keywords2.default[toHex], toHex);\n\n            if (cache) {\n                cache[key] = result;\n            }\n\n            return result;\n        } else {\n            const rgb = parsed.rgb();\n\n            if (!isLegacy && !rgb.color[0] && !rgb.color[1] && !rgb.color[2] && !alpha) {\n                const result = 'transparent';\n\n                if (cache) {\n                    cache[key] = result;\n                }\n\n                return result;\n            }\n\n            let hsla = parsed.hsl().string();\n            let rgba = rgb.string();\n            let result = hsla.length < rgba.length ? hsla : rgba;\n\n            if (cache) {\n                cache[key] = result;\n            }\n\n            return result;\n        }\n    } catch (e) {\n        // Possibly malformed, so pass through\n        const result = colour;\n\n        if (cache) {\n            cache[key] = result;\n        }\n\n        return result;\n    }\n};","module.exports = {\n  \"#f0ffff\": \"azure\",\n  \"#f5f5dc\": \"beige\",\n  \"#ffe4c4\": \"bisque\",\n  \"#a52a2a\": \"brown\",\n  \"#ff7f50\": \"coral\",\n  \"#ffd700\": \"gold\",\n  \"#808080\": \"grey\",\n  \"#008000\": \"green\",\n  \"#4b0082\": \"indigo\",\n  \"#fffff0\": \"ivory\",\n  \"#f0e68c\": \"khaki\",\n  \"#faf0e6\": \"linen\",\n  \"#800000\": \"maroon\",\n  \"#000080\": \"navy\",\n  \"#808000\": \"olive\",\n  \"#ffa500\": \"orange\",\n  \"#da70d6\": \"orchid\",\n  \"#cd853f\": \"peru\",\n  \"#ffc0cb\": \"pink\",\n  \"#dda0dd\": \"plum\",\n  \"#800080\": \"purple\",\n  \"#f00\": \"red\",\n  \"#fa8072\": \"salmon\",\n  \"#a0522d\": \"sienna\",\n  \"#c0c0c0\": \"silver\",\n  \"#fffafa\": \"snow\",\n  \"#d2b48c\": \"tan\",\n  \"#008080\": \"teal\",\n  \"#ff6347\": \"tomato\",\n  \"#ee82ee\": \"violet\",\n  \"#f5deb3\": \"wheat\"\n}\n","\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = hex => {\n    if (hex[1] === hex[2] && hex[3] === hex[4] && hex[5] === hex[6]) {\n        return '#' + hex[2] + hex[4] + hex[6];\n    }\n\n    return hex;\n};"]}