{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _helperPluginUtils() {\n  const data = require(\"@babel/helper-plugin-utils\");\n\n  _helperPluginUtils = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _pluginSyntaxNullishCoalescingOperator() {\n  const data = _interopRequireDefault(require(\"@babel/plugin-syntax-nullish-coalescing-operator\"));\n\n  _pluginSyntaxNullishCoalescingOperator = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _core() {\n  const data = require(\"@babel/core\");\n\n  _core = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = (0, _helperPluginUtils().declare)((api, {\n  loose = false\n}) => {\n  api.assertVersion(7);\n  return {\n    name: \"proposal-nullish-coalescing-operator\",\n    inherits: _pluginSyntaxNullishCoalescingOperator().default,\n    visitor: {\n      LogicalExpression(path) {\n        const {\n          node,\n          scope\n        } = path;\n\n        if (node.operator !== \"??\") {\n          return;\n        }\n\n        const ref = scope.generateUidIdentifierBasedOnNode(node.left);\n        scope.push({\n          id: ref\n        });\n\n        const assignment = _core().types.assignmentExpression(\"=\", _core().types.cloneNode(ref), node.left);\n\n        path.replaceWith(_core().types.conditionalExpression(loose ? _core().types.binaryExpression(\"!=\", assignment, _core().types.nullLiteral()) : _core().types.logicalExpression(\"&&\", _core().types.binaryExpression(\"!==\", assignment, _core().types.nullLiteral()), _core().types.binaryExpression(\"!==\", _core().types.cloneNode(ref), scope.buildUndefinedNode())), _core().types.cloneNode(ref), node.right));\n      }\n\n    }\n  };\n});\n\nexports.default = _default;"]}