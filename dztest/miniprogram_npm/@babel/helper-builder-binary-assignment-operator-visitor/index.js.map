{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _helperExplodeAssignableExpression = require(\"@babel/helper-explode-assignable-expression\");\n\nvar t = require(\"@babel/types\");\n\nfunction _default(opts) {\n  const {\n    build,\n    operator\n  } = opts;\n  return {\n    AssignmentExpression(path) {\n      const {\n        node,\n        scope\n      } = path;\n      if (node.operator !== operator + \"=\") return;\n      const nodes = [];\n      const exploded = (0, _helperExplodeAssignableExpression.default)(node.left, nodes, this, scope);\n      nodes.push(t.assignmentExpression(\"=\", exploded.ref, build(exploded.uid, node.right)));\n      path.replaceWith(t.sequenceExpression(nodes));\n    },\n\n    BinaryExpression(path) {\n      const {\n        node\n      } = path;\n\n      if (node.operator === operator) {\n        path.replaceWith(build(node.left, node.right));\n      }\n    }\n\n  };\n}"]}