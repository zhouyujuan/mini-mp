{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _helperPluginUtils() {\n  const data = require(\"@babel/helper-plugin-utils\");\n\n  _helperPluginUtils = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _pluginSyntaxDoExpressions() {\n  const data = _interopRequireDefault(require(\"@babel/plugin-syntax-do-expressions\"));\n\n  _pluginSyntaxDoExpressions = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = (0, _helperPluginUtils().declare)(api => {\n  api.assertVersion(7);\n  return {\n    name: \"proposal-do-expressions\",\n    inherits: _pluginSyntaxDoExpressions().default,\n    visitor: {\n      DoExpression: {\n        exit(path) {\n          const body = path.node.body.body;\n\n          if (body.length) {\n            path.replaceExpressionWithStatements(body);\n          } else {\n            path.replaceWith(path.scope.buildUndefinedNode());\n          }\n        }\n\n      }\n    }\n  };\n});\n\nexports.default = _default;"]}