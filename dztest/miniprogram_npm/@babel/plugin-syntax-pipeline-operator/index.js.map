{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.proposals = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nconst proposals = [\"minimal\", \"smart\", \"fsharp\"];\nexports.proposals = proposals;\n\nvar _default = (0, _helperPluginUtils.declare)((api, {\n  proposal\n}) => {\n  api.assertVersion(7);\n\n  if (typeof proposal !== \"string\" || !proposals.includes(proposal)) {\n    throw new Error(\"The pipeline operator plugin requires a 'proposal' option.\" + \"'proposal' must be one of: \" + proposals.join(\", \") + \". More details: https://babeljs.io/docs/en/next/babel-plugin-proposal-pipeline-operator\");\n  }\n\n  return {\n    name: \"syntax-pipeline-operator\",\n\n    manipulateOptions(opts, parserOpts) {\n      parserOpts.plugins.push([\"pipelineOperator\", {\n        proposal\n      }]);\n    }\n\n  };\n});\n\nexports.default = _default;"]}