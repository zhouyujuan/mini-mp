{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nvar abs = Math.abs\nvar round = Math.round\n\nfunction almostEq(a, b) {\n  return abs(a - b) <= 9.5367432e-7\n}\n\n//最大公约数 Greatest Common Divisor\nfunction GCD(a, b) {\n  if (almostEq(b, 0)) return a\n  return GCD(b, a % b)\n}\n\nfunction findPrecision(n) {\n  var e = 1\n\n  while (!almostEq(round(n * e) / e, n)) {\n    e *= 10\n  }\n\n  return e\n}\n\nfunction num2fraction(num) {\n  if (num === 0 || num === '0') return '0'\n\n  if (typeof num === 'string') {\n    num = parseFloat(num)\n  }\n\n\n  var precision = findPrecision(num) //精确度\n  var number = num * precision\n  var gcd = abs(GCD(number, precision))\n\n  //分子\n  var numerator = number / gcd\n  //分母\n  var denominator = precision / gcd\n\n  //分数\n  return round(numerator) + '/' + round(denominator)\n}\n\nmodule.exports = num2fraction\n\n"]}