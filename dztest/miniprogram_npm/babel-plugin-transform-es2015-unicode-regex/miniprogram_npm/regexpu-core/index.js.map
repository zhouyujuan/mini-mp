{"version":3,"sources":["rewrite-pattern.js","data/iu-mappings.json","data/character-class-escape-sets.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["var generate = require('regjsgen').generate;\nvar parse = require('regjsparser').parse;\nvar regenerate = require('regenerate');\nvar iuMappings = require('./data/iu-mappings.json');\nvar ESCAPE_SETS = require('./data/character-class-escape-sets.js');\n\nfunction getCharacterClassEscapeSet(character) {\n\tif (unicode) {\n\t\tif (ignoreCase) {\n\t\t\treturn ESCAPE_SETS.UNICODE_IGNORE_CASE[character];\n\t\t}\n\t\treturn ESCAPE_SETS.UNICODE[character];\n\t}\n\treturn ESCAPE_SETS.REGULAR[character];\n}\n\nvar object = {};\nvar hasOwnProperty = object.hasOwnProperty;\nfunction has(object, property) {\n\treturn hasOwnProperty.call(object, property);\n}\n\n// Prepare a Regenerate set containing all code points, used for negative\n// character classes (if any).\nvar UNICODE_SET = regenerate().addRange(0x0, 0x10FFFF);\n// Without the `u` flag, the range stops at 0xFFFF.\n// https://mths.be/es6#sec-pattern-semantics\nvar BMP_SET = regenerate().addRange(0x0, 0xFFFF);\n\n// Prepare a Regenerate set containing all code points that are supposed to be\n// matched by `/./u`. https://mths.be/es6#sec-atom\nvar DOT_SET_UNICODE = UNICODE_SET.clone() // all Unicode code points\n\t.remove(\n\t\t// minus `LineTerminator`s (https://mths.be/es6#sec-line-terminators):\n\t\t0x000A, // Line Feed <LF>\n\t\t0x000D, // Carriage Return <CR>\n\t\t0x2028, // Line Separator <LS>\n\t\t0x2029  // Paragraph Separator <PS>\n\t);\n// Prepare a Regenerate set containing all code points that are supposed to be\n// matched by `/./` (only BMP code points).\nvar DOT_SET = DOT_SET_UNICODE.clone()\n\t.intersection(BMP_SET);\n\n// Add a range of code points + any case-folded code points in that range to a\n// set.\nregenerate.prototype.iuAddRange = function(min, max) {\n\tvar $this = this;\n\tdo {\n\t\tvar folded = caseFold(min);\n\t\tif (folded) {\n\t\t\t$this.add(folded);\n\t\t}\n\t} while (++min <= max);\n\treturn $this;\n};\n\nfunction assign(target, source) {\n\tfor (var key in source) {\n\t\t// Note: `hasOwnProperty` is not needed here.\n\t\ttarget[key] = source[key];\n\t}\n}\n\nfunction update(item, pattern) {\n\t// TODO: Test if memoizing `pattern` here is worth the effort.\n\tif (!pattern) {\n\t\treturn;\n\t}\n\tvar tree = parse(pattern, '');\n\tswitch (tree.type) {\n\t\tcase 'characterClass':\n\t\tcase 'group':\n\t\tcase 'value':\n\t\t\t// No wrapping needed.\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t// Wrap the pattern in a non-capturing group.\n\t\t\ttree = wrap(tree, pattern);\n\t}\n\tassign(item, tree);\n}\n\nfunction wrap(tree, pattern) {\n\t// Wrap the pattern in a non-capturing group.\n\treturn {\n\t\t'type': 'group',\n\t\t'behavior': 'ignore',\n\t\t'body': [tree],\n\t\t'raw': '(?:' + pattern + ')'\n\t};\n}\n\nfunction caseFold(codePoint) {\n\treturn has(iuMappings, codePoint) ? iuMappings[codePoint] : false;\n}\n\nvar ignoreCase = false;\nvar unicode = false;\nfunction processCharacterClass(characterClassItem) {\n\tvar set = regenerate();\n\tvar body = characterClassItem.body.forEach(function(item) {\n\t\tswitch (item.type) {\n\t\t\tcase 'value':\n\t\t\t\tset.add(item.codePoint);\n\t\t\t\tif (ignoreCase && unicode) {\n\t\t\t\t\tvar folded = caseFold(item.codePoint);\n\t\t\t\t\tif (folded) {\n\t\t\t\t\t\tset.add(folded);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'characterClassRange':\n\t\t\t\tvar min = item.min.codePoint;\n\t\t\t\tvar max = item.max.codePoint;\n\t\t\t\tset.addRange(min, max);\n\t\t\t\tif (ignoreCase && unicode) {\n\t\t\t\t\tset.iuAddRange(min, max);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'characterClassEscape':\n\t\t\t\tset.add(getCharacterClassEscapeSet(item.value));\n\t\t\t\tbreak;\n\t\t\t// The `default` clause is only here as a safeguard; it should never be\n\t\t\t// reached. Code coverage tools should ignore it.\n\t\t\t/* istanbul ignore next */\n\t\t\tdefault:\n\t\t\t\tthrow Error('Unknown term type: ' + item.type);\n\t\t}\n\t});\n\tif (characterClassItem.negative) {\n\t\tset = (unicode ? UNICODE_SET : BMP_SET).clone().remove(set);\n\t}\n\tupdate(characterClassItem, set.toString());\n\treturn characterClassItem;\n}\n\nfunction processTerm(item) {\n\tswitch (item.type) {\n\t\tcase 'dot':\n\t\t\tupdate(\n\t\t\t\titem,\n\t\t\t\t(unicode ? DOT_SET_UNICODE : DOT_SET).toString()\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'characterClass':\n\t\t\titem = processCharacterClass(item);\n\t\t\tbreak;\n\t\tcase 'characterClassEscape':\n\t\t\tupdate(\n\t\t\t\titem,\n\t\t\t\tgetCharacterClassEscapeSet(item.value).toString()\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'alternative':\n\t\tcase 'disjunction':\n\t\tcase 'group':\n\t\tcase 'quantifier':\n\t\t\titem.body = item.body.map(processTerm);\n\t\t\tbreak;\n\t\tcase 'value':\n\t\t\tvar codePoint = item.codePoint;\n\t\t\tvar set = regenerate(codePoint);\n\t\t\tif (ignoreCase && unicode) {\n\t\t\t\tvar folded = caseFold(codePoint);\n\t\t\t\tif (folded) {\n\t\t\t\t\tset.add(folded);\n\t\t\t\t}\n\t\t\t}\n\t\t\tupdate(item, set.toString());\n\t\t\tbreak;\n\t\tcase 'anchor':\n\t\tcase 'empty':\n\t\tcase 'group':\n\t\tcase 'reference':\n\t\t\t// Nothing to do here.\n\t\t\tbreak;\n\t\t// The `default` clause is only here as a safeguard; it should never be\n\t\t// reached. Code coverage tools should ignore it.\n\t\t/* istanbul ignore next */\n\t\tdefault:\n\t\t\tthrow Error('Unknown term type: ' + item.type);\n\t}\n\treturn item;\n};\n\nmodule.exports = function(pattern, flags) {\n\tvar tree = parse(pattern, flags);\n\tignoreCase = flags ? flags.indexOf('i') > -1 : false;\n\tunicode = flags ? flags.indexOf('u') > -1 : false;\n\tassign(tree, processTerm(tree));\n\treturn generate(tree);\n};\n","module.exports = {\n\t\"75\": 8490,\n\t\"83\": 383,\n\t\"107\": 8490,\n\t\"115\": 383,\n\t\"181\": 924,\n\t\"197\": 8491,\n\t\"383\": 83,\n\t\"452\": 453,\n\t\"453\": 452,\n\t\"455\": 456,\n\t\"456\": 455,\n\t\"458\": 459,\n\t\"459\": 458,\n\t\"497\": 498,\n\t\"498\": 497,\n\t\"837\": 8126,\n\t\"914\": 976,\n\t\"917\": 1013,\n\t\"920\": 1012,\n\t\"921\": 8126,\n\t\"922\": 1008,\n\t\"924\": 181,\n\t\"928\": 982,\n\t\"929\": 1009,\n\t\"931\": 962,\n\t\"934\": 981,\n\t\"937\": 8486,\n\t\"962\": 931,\n\t\"976\": 914,\n\t\"977\": 1012,\n\t\"981\": 934,\n\t\"982\": 928,\n\t\"1008\": 922,\n\t\"1009\": 929,\n\t\"1012\": [\n\t\t920,\n\t\t977\n\t],\n\t\"1013\": 917,\n\t\"7776\": 7835,\n\t\"7835\": 7776,\n\t\"8126\": [\n\t\t837,\n\t\t921\n\t],\n\t\"8486\": 937,\n\t\"8490\": 75,\n\t\"8491\": 197,\n\t\"66560\": 66600,\n\t\"66561\": 66601,\n\t\"66562\": 66602,\n\t\"66563\": 66603,\n\t\"66564\": 66604,\n\t\"66565\": 66605,\n\t\"66566\": 66606,\n\t\"66567\": 66607,\n\t\"66568\": 66608,\n\t\"66569\": 66609,\n\t\"66570\": 66610,\n\t\"66571\": 66611,\n\t\"66572\": 66612,\n\t\"66573\": 66613,\n\t\"66574\": 66614,\n\t\"66575\": 66615,\n\t\"66576\": 66616,\n\t\"66577\": 66617,\n\t\"66578\": 66618,\n\t\"66579\": 66619,\n\t\"66580\": 66620,\n\t\"66581\": 66621,\n\t\"66582\": 66622,\n\t\"66583\": 66623,\n\t\"66584\": 66624,\n\t\"66585\": 66625,\n\t\"66586\": 66626,\n\t\"66587\": 66627,\n\t\"66588\": 66628,\n\t\"66589\": 66629,\n\t\"66590\": 66630,\n\t\"66591\": 66631,\n\t\"66592\": 66632,\n\t\"66593\": 66633,\n\t\"66594\": 66634,\n\t\"66595\": 66635,\n\t\"66596\": 66636,\n\t\"66597\": 66637,\n\t\"66598\": 66638,\n\t\"66599\": 66639,\n\t\"66600\": 66560,\n\t\"66601\": 66561,\n\t\"66602\": 66562,\n\t\"66603\": 66563,\n\t\"66604\": 66564,\n\t\"66605\": 66565,\n\t\"66606\": 66566,\n\t\"66607\": 66567,\n\t\"66608\": 66568,\n\t\"66609\": 66569,\n\t\"66610\": 66570,\n\t\"66611\": 66571,\n\t\"66612\": 66572,\n\t\"66613\": 66573,\n\t\"66614\": 66574,\n\t\"66615\": 66575,\n\t\"66616\": 66576,\n\t\"66617\": 66577,\n\t\"66618\": 66578,\n\t\"66619\": 66579,\n\t\"66620\": 66580,\n\t\"66621\": 66581,\n\t\"66622\": 66582,\n\t\"66623\": 66583,\n\t\"66624\": 66584,\n\t\"66625\": 66585,\n\t\"66626\": 66586,\n\t\"66627\": 66587,\n\t\"66628\": 66588,\n\t\"66629\": 66589,\n\t\"66630\": 66590,\n\t\"66631\": 66591,\n\t\"66632\": 66592,\n\t\"66633\": 66593,\n\t\"66634\": 66594,\n\t\"66635\": 66595,\n\t\"66636\": 66596,\n\t\"66637\": 66597,\n\t\"66638\": 66598,\n\t\"66639\": 66599,\n\t\"68736\": 68800,\n\t\"68737\": 68801,\n\t\"68738\": 68802,\n\t\"68739\": 68803,\n\t\"68740\": 68804,\n\t\"68741\": 68805,\n\t\"68742\": 68806,\n\t\"68743\": 68807,\n\t\"68744\": 68808,\n\t\"68745\": 68809,\n\t\"68746\": 68810,\n\t\"68747\": 68811,\n\t\"68748\": 68812,\n\t\"68749\": 68813,\n\t\"68750\": 68814,\n\t\"68751\": 68815,\n\t\"68752\": 68816,\n\t\"68753\": 68817,\n\t\"68754\": 68818,\n\t\"68755\": 68819,\n\t\"68756\": 68820,\n\t\"68757\": 68821,\n\t\"68758\": 68822,\n\t\"68759\": 68823,\n\t\"68760\": 68824,\n\t\"68761\": 68825,\n\t\"68762\": 68826,\n\t\"68763\": 68827,\n\t\"68764\": 68828,\n\t\"68765\": 68829,\n\t\"68766\": 68830,\n\t\"68767\": 68831,\n\t\"68768\": 68832,\n\t\"68769\": 68833,\n\t\"68770\": 68834,\n\t\"68771\": 68835,\n\t\"68772\": 68836,\n\t\"68773\": 68837,\n\t\"68774\": 68838,\n\t\"68775\": 68839,\n\t\"68776\": 68840,\n\t\"68777\": 68841,\n\t\"68778\": 68842,\n\t\"68779\": 68843,\n\t\"68780\": 68844,\n\t\"68781\": 68845,\n\t\"68782\": 68846,\n\t\"68783\": 68847,\n\t\"68784\": 68848,\n\t\"68785\": 68849,\n\t\"68786\": 68850,\n\t\"68800\": 68736,\n\t\"68801\": 68737,\n\t\"68802\": 68738,\n\t\"68803\": 68739,\n\t\"68804\": 68740,\n\t\"68805\": 68741,\n\t\"68806\": 68742,\n\t\"68807\": 68743,\n\t\"68808\": 68744,\n\t\"68809\": 68745,\n\t\"68810\": 68746,\n\t\"68811\": 68747,\n\t\"68812\": 68748,\n\t\"68813\": 68749,\n\t\"68814\": 68750,\n\t\"68815\": 68751,\n\t\"68816\": 68752,\n\t\"68817\": 68753,\n\t\"68818\": 68754,\n\t\"68819\": 68755,\n\t\"68820\": 68756,\n\t\"68821\": 68757,\n\t\"68822\": 68758,\n\t\"68823\": 68759,\n\t\"68824\": 68760,\n\t\"68825\": 68761,\n\t\"68826\": 68762,\n\t\"68827\": 68763,\n\t\"68828\": 68764,\n\t\"68829\": 68765,\n\t\"68830\": 68766,\n\t\"68831\": 68767,\n\t\"68832\": 68768,\n\t\"68833\": 68769,\n\t\"68834\": 68770,\n\t\"68835\": 68771,\n\t\"68836\": 68772,\n\t\"68837\": 68773,\n\t\"68838\": 68774,\n\t\"68839\": 68775,\n\t\"68840\": 68776,\n\t\"68841\": 68777,\n\t\"68842\": 68778,\n\t\"68843\": 68779,\n\t\"68844\": 68780,\n\t\"68845\": 68781,\n\t\"68846\": 68782,\n\t\"68847\": 68783,\n\t\"68848\": 68784,\n\t\"68849\": 68785,\n\t\"68850\": 68786,\n\t\"71840\": 71872,\n\t\"71841\": 71873,\n\t\"71842\": 71874,\n\t\"71843\": 71875,\n\t\"71844\": 71876,\n\t\"71845\": 71877,\n\t\"71846\": 71878,\n\t\"71847\": 71879,\n\t\"71848\": 71880,\n\t\"71849\": 71881,\n\t\"71850\": 71882,\n\t\"71851\": 71883,\n\t\"71852\": 71884,\n\t\"71853\": 71885,\n\t\"71854\": 71886,\n\t\"71855\": 71887,\n\t\"71856\": 71888,\n\t\"71857\": 71889,\n\t\"71858\": 71890,\n\t\"71859\": 71891,\n\t\"71860\": 71892,\n\t\"71861\": 71893,\n\t\"71862\": 71894,\n\t\"71863\": 71895,\n\t\"71864\": 71896,\n\t\"71865\": 71897,\n\t\"71866\": 71898,\n\t\"71867\": 71899,\n\t\"71868\": 71900,\n\t\"71869\": 71901,\n\t\"71870\": 71902,\n\t\"71871\": 71903,\n\t\"71872\": 71840,\n\t\"71873\": 71841,\n\t\"71874\": 71842,\n\t\"71875\": 71843,\n\t\"71876\": 71844,\n\t\"71877\": 71845,\n\t\"71878\": 71846,\n\t\"71879\": 71847,\n\t\"71880\": 71848,\n\t\"71881\": 71849,\n\t\"71882\": 71850,\n\t\"71883\": 71851,\n\t\"71884\": 71852,\n\t\"71885\": 71853,\n\t\"71886\": 71854,\n\t\"71887\": 71855,\n\t\"71888\": 71856,\n\t\"71889\": 71857,\n\t\"71890\": 71858,\n\t\"71891\": 71859,\n\t\"71892\": 71860,\n\t\"71893\": 71861,\n\t\"71894\": 71862,\n\t\"71895\": 71863,\n\t\"71896\": 71864,\n\t\"71897\": 71865,\n\t\"71898\": 71866,\n\t\"71899\": 71867,\n\t\"71900\": 71868,\n\t\"71901\": 71869,\n\t\"71902\": 71870,\n\t\"71903\": 71871\n}\n","// Generated by `/scripts/character-class-escape-sets.js`. Do not edit.\nvar regenerate = require('regenerate');\n\nexports.REGULAR = {\n\t'd': regenerate()\n\t\t.addRange(0x30, 0x39),\n\t'D': regenerate()\n\t\t.addRange(0x0, 0x2F)\n\t\t.addRange(0x3A, 0xFFFF),\n\t's': regenerate(0x20, 0xA0, 0x1680, 0x202F, 0x205F, 0x3000, 0xFEFF)\n\t\t.addRange(0x9, 0xD)\n\t\t.addRange(0x2000, 0x200A)\n\t\t.addRange(0x2028, 0x2029),\n\t'S': regenerate()\n\t\t.addRange(0x0, 0x8)\n\t\t.addRange(0xE, 0x1F)\n\t\t.addRange(0x21, 0x9F)\n\t\t.addRange(0xA1, 0x167F)\n\t\t.addRange(0x1681, 0x1FFF)\n\t\t.addRange(0x200B, 0x2027)\n\t\t.addRange(0x202A, 0x202E)\n\t\t.addRange(0x2030, 0x205E)\n\t\t.addRange(0x2060, 0x2FFF)\n\t\t.addRange(0x3001, 0xFEFE)\n\t\t.addRange(0xFF00, 0xFFFF),\n\t'w': regenerate(0x5F)\n\t\t.addRange(0x30, 0x39)\n\t\t.addRange(0x41, 0x5A)\n\t\t.addRange(0x61, 0x7A),\n\t'W': regenerate(0x60)\n\t\t.addRange(0x0, 0x2F)\n\t\t.addRange(0x3A, 0x40)\n\t\t.addRange(0x5B, 0x5E)\n\t\t.addRange(0x7B, 0xFFFF)\n};\n\nexports.UNICODE = {\n\t'd': regenerate()\n\t\t.addRange(0x30, 0x39),\n\t'D': regenerate()\n\t\t.addRange(0x0, 0x2F)\n\t\t.addRange(0x3A, 0x10FFFF),\n\t's': regenerate(0x20, 0xA0, 0x1680, 0x202F, 0x205F, 0x3000, 0xFEFF)\n\t\t.addRange(0x9, 0xD)\n\t\t.addRange(0x2000, 0x200A)\n\t\t.addRange(0x2028, 0x2029),\n\t'S': regenerate()\n\t\t.addRange(0x0, 0x8)\n\t\t.addRange(0xE, 0x1F)\n\t\t.addRange(0x21, 0x9F)\n\t\t.addRange(0xA1, 0x167F)\n\t\t.addRange(0x1681, 0x1FFF)\n\t\t.addRange(0x200B, 0x2027)\n\t\t.addRange(0x202A, 0x202E)\n\t\t.addRange(0x2030, 0x205E)\n\t\t.addRange(0x2060, 0x2FFF)\n\t\t.addRange(0x3001, 0xFEFE)\n\t\t.addRange(0xFF00, 0x10FFFF),\n\t'w': regenerate(0x5F)\n\t\t.addRange(0x30, 0x39)\n\t\t.addRange(0x41, 0x5A)\n\t\t.addRange(0x61, 0x7A),\n\t'W': regenerate(0x60)\n\t\t.addRange(0x0, 0x2F)\n\t\t.addRange(0x3A, 0x40)\n\t\t.addRange(0x5B, 0x5E)\n\t\t.addRange(0x7B, 0x10FFFF)\n};\n\nexports.UNICODE_IGNORE_CASE = {\n\t'd': regenerate()\n\t\t.addRange(0x30, 0x39),\n\t'D': regenerate()\n\t\t.addRange(0x0, 0x2F)\n\t\t.addRange(0x3A, 0x10FFFF),\n\t's': regenerate(0x20, 0xA0, 0x1680, 0x202F, 0x205F, 0x3000, 0xFEFF)\n\t\t.addRange(0x9, 0xD)\n\t\t.addRange(0x2000, 0x200A)\n\t\t.addRange(0x2028, 0x2029),\n\t'S': regenerate()\n\t\t.addRange(0x0, 0x8)\n\t\t.addRange(0xE, 0x1F)\n\t\t.addRange(0x21, 0x9F)\n\t\t.addRange(0xA1, 0x167F)\n\t\t.addRange(0x1681, 0x1FFF)\n\t\t.addRange(0x200B, 0x2027)\n\t\t.addRange(0x202A, 0x202E)\n\t\t.addRange(0x2030, 0x205E)\n\t\t.addRange(0x2060, 0x2FFF)\n\t\t.addRange(0x3001, 0xFEFE)\n\t\t.addRange(0xFF00, 0x10FFFF),\n\t'w': regenerate(0x5F, 0x17F, 0x212A)\n\t\t.addRange(0x30, 0x39)\n\t\t.addRange(0x41, 0x5A)\n\t\t.addRange(0x61, 0x7A),\n\t'W': regenerate(0x4B, 0x53, 0x60)\n\t\t.addRange(0x0, 0x2F)\n\t\t.addRange(0x3A, 0x40)\n\t\t.addRange(0x5B, 0x5E)\n\t\t.addRange(0x7B, 0x10FFFF)\n};\n"]}