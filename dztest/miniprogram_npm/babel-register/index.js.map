{"version":3,"sources":["node.js","cache.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nexports.__esModule = true;\n\nvar _keys = require(\"babel-runtime/core-js/object/keys\");\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _stringify = require(\"babel-runtime/core-js/json/stringify\");\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nexports.default = function () {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (opts.only != null) only = _babelCore.util.arrayify(opts.only, _babelCore.util.regexify);\n  if (opts.ignore != null) ignore = _babelCore.util.arrayify(opts.ignore, _babelCore.util.regexify);\n\n  if (opts.extensions) hookExtensions(_babelCore.util.arrayify(opts.extensions));\n\n  if (opts.cache === false) cache = null;\n\n  delete opts.extensions;\n  delete opts.ignore;\n  delete opts.cache;\n  delete opts.only;\n\n  (0, _extend2.default)(transformOpts, opts);\n};\n\nvar _cloneDeep = require(\"lodash/cloneDeep\");\n\nvar _cloneDeep2 = _interopRequireDefault(_cloneDeep);\n\nvar _sourceMapSupport = require(\"source-map-support\");\n\nvar _sourceMapSupport2 = _interopRequireDefault(_sourceMapSupport);\n\nvar _cache = require(\"./cache\");\n\nvar registerCache = _interopRequireWildcard(_cache);\n\nvar _extend = require(\"lodash/extend\");\n\nvar _extend2 = _interopRequireDefault(_extend);\n\nvar _babelCore = require(\"babel-core\");\n\nvar babel = _interopRequireWildcard(_babelCore);\n\nvar _fs = require(\"fs\");\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _path = require(\"path\");\n\nvar _path2 = _interopRequireDefault(_path);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_sourceMapSupport2.default.install({\n  handleUncaughtExceptions: false,\n  environment: \"node\",\n  retrieveSourceMap: function retrieveSourceMap(source) {\n    var map = maps && maps[source];\n    if (map) {\n      return {\n        url: null,\n        map: map\n      };\n    } else {\n      return null;\n    }\n  }\n});\n\nregisterCache.load();\nvar cache = registerCache.get();\n\nvar transformOpts = {};\n\nvar ignore = void 0;\nvar only = void 0;\n\nvar oldHandlers = {};\nvar maps = {};\n\nvar cwd = process.cwd();\n\nfunction getRelativePath(filename) {\n  return _path2.default.relative(cwd, filename);\n}\n\nfunction mtime(filename) {\n  return +_fs2.default.statSync(filename).mtime;\n}\n\nfunction compile(filename) {\n  var result = void 0;\n\n  var opts = new _babelCore.OptionManager().init((0, _extend2.default)({ sourceRoot: _path2.default.dirname(filename) }, (0, _cloneDeep2.default)(transformOpts), { filename: filename }));\n\n  var cacheKey = (0, _stringify2.default)(opts) + \":\" + babel.version;\n\n  var env = process.env.BABEL_ENV || process.env.NODE_ENV;\n  if (env) cacheKey += \":\" + env;\n\n  if (cache) {\n    var cached = cache[cacheKey];\n    if (cached && cached.mtime === mtime(filename)) {\n      result = cached;\n    }\n  }\n\n  if (!result) {\n    result = babel.transformFileSync(filename, (0, _extend2.default)(opts, {\n      babelrc: false,\n      sourceMaps: \"both\",\n      ast: false\n    }));\n  }\n\n  if (cache) {\n    cache[cacheKey] = result;\n    result.mtime = mtime(filename);\n  }\n\n  maps[filename] = result.map;\n\n  return result.code;\n}\n\nfunction shouldIgnore(filename) {\n  if (!ignore && !only) {\n    return getRelativePath(filename).split(_path2.default.sep).indexOf(\"node_modules\") >= 0;\n  } else {\n    return _babelCore.util.shouldIgnore(filename, ignore || [], only);\n  }\n}\n\nfunction loader(m, filename) {\n  m._compile(compile(filename), filename);\n}\n\nfunction registerExtension(ext) {\n  var old = oldHandlers[ext] || oldHandlers[\".js\"] || require.extensions[\".js\"];\n\n  require.extensions[ext] = function (m, filename) {\n    if (shouldIgnore(filename)) {\n      old(m, filename);\n    } else {\n      loader(m, filename, old);\n    }\n  };\n}\n\nfunction hookExtensions(_exts) {\n  (0, _keys2.default)(oldHandlers).forEach(function (ext) {\n    var old = oldHandlers[ext];\n    if (old === undefined) {\n      delete require.extensions[ext];\n    } else {\n      require.extensions[ext] = old;\n    }\n  });\n\n  oldHandlers = {};\n\n  _exts.forEach(function (ext) {\n    oldHandlers[ext] = require.extensions[ext];\n    registerExtension(ext);\n  });\n}\n\nhookExtensions(_babelCore.util.canCompile.EXTENSIONS);\n\nmodule.exports = exports[\"default\"];","\n\nexports.__esModule = true;\n\nvar _stringify = require(\"babel-runtime/core-js/json/stringify\");\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nexports.save = save;\nexports.load = load;\nexports.get = get;\n\nvar _path = require(\"path\");\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _fs = require(\"fs\");\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _mkdirp = require(\"mkdirp\");\n\nvar _homeOrTmp = require(\"home-or-tmp\");\n\nvar _homeOrTmp2 = _interopRequireDefault(_homeOrTmp);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar FILENAME = process.env.BABEL_CACHE_PATH || _path2.default.join(_homeOrTmp2.default, \".babel.json\");\nvar data = {};\n\nfunction save() {\n  var serialised = \"{}\";\n\n  try {\n    serialised = (0, _stringify2.default)(data, null, \"  \");\n  } catch (err) {\n\n    if (err.message === \"Invalid string length\") {\n      err.message = \"Cache too large so it's been cleared.\";\n      console.error(err.stack);\n    } else {\n      throw err;\n    }\n  }\n\n  (0, _mkdirp.sync)(_path2.default.dirname(FILENAME));\n  _fs2.default.writeFileSync(FILENAME, serialised);\n}\n\nfunction load() {\n  if (process.env.BABEL_DISABLE_CACHE) return;\n\n  process.on(\"exit\", save);\n  process.nextTick(save);\n\n  if (!_fs2.default.existsSync(FILENAME)) return;\n\n  try {\n    data = JSON.parse(_fs2.default.readFileSync(FILENAME));\n  } catch (err) {\n    return;\n  }\n}\n\nfunction get() {\n  return data;\n}"]}