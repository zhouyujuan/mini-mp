{"version":3,"sources":["index.js","lib/map.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _postcss = require('postcss');\n\nvar _postcssValueParser = require('postcss-value-parser');\n\nvar _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);\n\nvar _cssnanoUtilGetMatch = require('cssnano-util-get-match');\n\nvar _cssnanoUtilGetMatch2 = _interopRequireDefault(_cssnanoUtilGetMatch);\n\nvar _map = require('./lib/map');\n\nvar _map2 = _interopRequireDefault(_map);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst getMatch = (0, _cssnanoUtilGetMatch2.default)(_map2.default);\nconst getValue = node => parseFloat(node.value);\n\nfunction evenValues(list, index) {\n    return index % 2 === 0;\n}\n\nfunction reduce(node) {\n    if (node.type !== 'function') {\n        return false;\n    }\n\n    const lowerCasedValue = node.value.toLowerCase();\n\n    if (lowerCasedValue === 'steps') {\n        // Don't bother checking the step-end case as it has the same length\n        // as steps(1)\n        if (getValue(node.nodes[0]) === 1 && node.nodes[2] && node.nodes[2].value.toLowerCase() === 'start') {\n            node.type = 'word';\n            node.value = 'step-start';\n\n            delete node.nodes;\n\n            return;\n        }\n\n        // The end case is actually the browser default, so it isn't required.\n        if (node.nodes[2] && node.nodes[2].value.toLowerCase() === 'end') {\n            node.nodes = [node.nodes[0]];\n\n            return;\n        }\n\n        return false;\n    }\n\n    if (lowerCasedValue === 'cubic-bezier') {\n        const match = getMatch(node.nodes.filter(evenValues).map(getValue));\n\n        if (match) {\n            node.type = 'word';\n            node.value = match;\n\n            delete node.nodes;\n\n            return;\n        }\n    }\n}\n\nexports.default = (0, _postcss.plugin)('postcss-normalize-timing-functions', () => {\n    return css => {\n        const cache = {};\n\n        css.walkDecls(/(animation|transition)(-timing-function|$)/i, decl => {\n            const value = decl.value;\n\n            if (cache[value]) {\n                decl.value = cache[value];\n\n                return;\n            }\n\n            const result = (0, _postcssValueParser2.default)(value).walk(reduce).toString();\n\n            decl.value = result;\n            cache[value] = result;\n        });\n    };\n});\nmodule.exports = exports['default'];","\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = [['ease', [0.25, 0.1, 0.25, 1]], ['linear', [0, 0, 1, 1]], ['ease-in', [0.42, 0, 1, 1]], ['ease-out', [0, 0, 0.58, 1]], ['ease-in-out', [0.42, 0, 0.58, 1]]];\nmodule.exports = exports['default'];"]}