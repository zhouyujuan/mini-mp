{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _postcss = require('postcss');\n\nvar _postcss2 = _interopRequireDefault(_postcss);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nlet charset = 'charset';\n\nexports.default = _postcss2.default.plugin('postcss-normalize-' + charset, (opts = {}) => {\n    return css => {\n        let charsetRule;\n        let nonAsciiNode;\n        let nonAscii = /[^\\x00-\\x7F]/;\n\n        css.walk(node => {\n            if (node.type === 'atrule' && node.name === charset) {\n                if (!charsetRule) {\n                    charsetRule = node;\n                }\n                node.remove();\n            } else if (!nonAsciiNode && node.parent === css && nonAscii.test(node)) {\n                nonAsciiNode = node;\n            }\n        });\n\n        if (nonAsciiNode) {\n            if (!charsetRule && opts.add !== false) {\n                charsetRule = _postcss2.default.atRule({\n                    name: charset,\n                    params: '\"utf-8\"'\n                });\n            }\n            if (charsetRule) {\n                charsetRule.source = nonAsciiNode.source;\n                css.prepend(charsetRule);\n            }\n        }\n    };\n});\nmodule.exports = exports['default'];"]}