{"version":3,"sources":["index.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["\n\nexports.__esModule = true;\n\nvar _getIterator2 = require(\"babel-runtime/core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.default = function (_ref) {\n  var t = _ref.types;\n\n  var findBareSupers = {\n    Super: function Super(path) {\n      if (path.parentPath.isCallExpression({ callee: path.node })) {\n        this.push(path.parentPath);\n      }\n    }\n  };\n\n  var referenceVisitor = {\n    ReferencedIdentifier: function ReferencedIdentifier(path) {\n      if (this.scope.hasOwnBinding(path.node.name)) {\n        this.collision = true;\n        path.skip();\n      }\n    }\n  };\n\n  var buildObjectDefineProperty = (0, _babelTemplate2.default)(\"\\n    Object.defineProperty(REF, KEY, {\\n      // configurable is false by default\\n      enumerable: true,\\n      writable: true,\\n      value: VALUE\\n    });\\n  \");\n\n  var buildClassPropertySpec = function buildClassPropertySpec(ref, _ref2) {\n    var key = _ref2.key,\n        value = _ref2.value,\n        computed = _ref2.computed;\n    return buildObjectDefineProperty({\n      REF: ref,\n      KEY: t.isIdentifier(key) && !computed ? t.stringLiteral(key.name) : key,\n      VALUE: value ? value : t.identifier(\"undefined\")\n    });\n  };\n\n  var buildClassPropertyNonSpec = function buildClassPropertyNonSpec(ref, _ref3) {\n    var key = _ref3.key,\n        value = _ref3.value,\n        computed = _ref3.computed;\n    return t.expressionStatement(t.assignmentExpression(\"=\", t.memberExpression(ref, key, computed || t.isLiteral(key)), value));\n  };\n\n  return {\n    inherits: require(\"babel-plugin-syntax-class-properties\"),\n\n    visitor: {\n      Class: function Class(path, state) {\n        var buildClassProperty = state.opts.spec ? buildClassPropertySpec : buildClassPropertyNonSpec;\n        var isDerived = !!path.node.superClass;\n        var constructor = void 0;\n        var props = [];\n        var body = path.get(\"body\");\n\n        for (var _iterator = body.get(\"body\"), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n          var _ref4;\n\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref4 = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref4 = _i.value;\n          }\n\n          var _path = _ref4;\n\n          if (_path.isClassProperty()) {\n            props.push(_path);\n          } else if (_path.isClassMethod({ kind: \"constructor\" })) {\n            constructor = _path;\n          }\n        }\n\n        if (!props.length) return;\n\n        var nodes = [];\n        var ref = void 0;\n\n        if (path.isClassExpression() || !path.node.id) {\n          (0, _babelHelperFunctionName2.default)(path);\n          ref = path.scope.generateUidIdentifier(\"class\");\n        } else {\n          ref = path.node.id;\n        }\n\n        var instanceBody = [];\n\n        for (var _iterator2 = props, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n          var _ref5;\n\n          if (_isArray2) {\n            if (_i2 >= _iterator2.length) break;\n            _ref5 = _iterator2[_i2++];\n          } else {\n            _i2 = _iterator2.next();\n            if (_i2.done) break;\n            _ref5 = _i2.value;\n          }\n\n          var _prop = _ref5;\n\n          var propNode = _prop.node;\n          if (propNode.decorators && propNode.decorators.length > 0) continue;\n\n          if (!state.opts.spec && !propNode.value) continue;\n\n          var isStatic = propNode.static;\n\n          if (isStatic) {\n            nodes.push(buildClassProperty(ref, propNode));\n          } else {\n            if (!propNode.value) continue;\n            instanceBody.push(buildClassProperty(t.thisExpression(), propNode));\n          }\n        }\n\n        if (instanceBody.length) {\n          if (!constructor) {\n            var newConstructor = t.classMethod(\"constructor\", t.identifier(\"constructor\"), [], t.blockStatement([]));\n            if (isDerived) {\n              newConstructor.params = [t.restElement(t.identifier(\"args\"))];\n              newConstructor.body.body.push(t.returnStatement(t.callExpression(t.super(), [t.spreadElement(t.identifier(\"args\"))])));\n            }\n\n            var _body$unshiftContaine = body.unshiftContainer(\"body\", newConstructor);\n\n            constructor = _body$unshiftContaine[0];\n          }\n\n          var collisionState = {\n            collision: false,\n            scope: constructor.scope\n          };\n\n          for (var _iterator3 = props, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\n            var _ref6;\n\n            if (_isArray3) {\n              if (_i3 >= _iterator3.length) break;\n              _ref6 = _iterator3[_i3++];\n            } else {\n              _i3 = _iterator3.next();\n              if (_i3.done) break;\n              _ref6 = _i3.value;\n            }\n\n            var prop = _ref6;\n\n            prop.traverse(referenceVisitor, collisionState);\n            if (collisionState.collision) break;\n          }\n\n          if (collisionState.collision) {\n            var initialisePropsRef = path.scope.generateUidIdentifier(\"initialiseProps\");\n\n            nodes.push(t.variableDeclaration(\"var\", [t.variableDeclarator(initialisePropsRef, t.functionExpression(null, [], t.blockStatement(instanceBody)))]));\n\n            instanceBody = [t.expressionStatement(t.callExpression(t.memberExpression(initialisePropsRef, t.identifier(\"call\")), [t.thisExpression()]))];\n          }\n\n          if (isDerived) {\n            var bareSupers = [];\n            constructor.traverse(findBareSupers, bareSupers);\n            for (var _iterator4 = bareSupers, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : (0, _getIterator3.default)(_iterator4);;) {\n              var _ref7;\n\n              if (_isArray4) {\n                if (_i4 >= _iterator4.length) break;\n                _ref7 = _iterator4[_i4++];\n              } else {\n                _i4 = _iterator4.next();\n                if (_i4.done) break;\n                _ref7 = _i4.value;\n              }\n\n              var bareSuper = _ref7;\n\n              bareSuper.insertAfter(instanceBody);\n            }\n          } else {\n            constructor.get(\"body\").unshiftContainer(\"body\", instanceBody);\n          }\n        }\n\n        for (var _iterator5 = props, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : (0, _getIterator3.default)(_iterator5);;) {\n          var _ref8;\n\n          if (_isArray5) {\n            if (_i5 >= _iterator5.length) break;\n            _ref8 = _iterator5[_i5++];\n          } else {\n            _i5 = _iterator5.next();\n            if (_i5.done) break;\n            _ref8 = _i5.value;\n          }\n\n          var _prop2 = _ref8;\n\n          _prop2.remove();\n        }\n\n        if (!nodes.length) return;\n\n        if (path.isClassExpression()) {\n          path.scope.push({ id: ref });\n          path.replaceWith(t.assignmentExpression(\"=\", ref, path.node));\n        } else {\n          if (!path.node.id) {\n            path.node.id = ref;\n          }\n\n          if (path.parentPath.isExportDeclaration()) {\n            path = path.parentPath;\n          }\n        }\n\n        path.insertAfter(nodes);\n      },\n      ArrowFunctionExpression: function ArrowFunctionExpression(path) {\n        var classExp = path.get(\"body\");\n        if (!classExp.isClassExpression()) return;\n\n        var body = classExp.get(\"body\");\n        var members = body.get(\"body\");\n        if (members.some(function (member) {\n          return member.isClassProperty();\n        })) {\n          path.ensureBlock();\n        }\n      }\n    }\n  };\n};\n\nvar _babelHelperFunctionName = require(\"babel-helper-function-name\");\n\nvar _babelHelperFunctionName2 = _interopRequireDefault(_babelHelperFunctionName);\n\nvar _babelTemplate = require(\"babel-template\");\n\nvar _babelTemplate2 = _interopRequireDefault(_babelTemplate);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports[\"default\"];"]}