{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nexports.__esModule = true;\n\nexports.default = function (_ref) {\n  var t = _ref.types;\n\n  function getTempId(scope) {\n    var id = scope.path.getData(\"functionBind\");\n    if (id) return id;\n\n    id = scope.generateDeclaredUidIdentifier(\"context\");\n    return scope.path.setData(\"functionBind\", id);\n  }\n\n  function getStaticContext(bind, scope) {\n    var object = bind.object || bind.callee.object;\n    return scope.isStatic(object) && object;\n  }\n\n  function inferBindContext(bind, scope) {\n    var staticContext = getStaticContext(bind, scope);\n    if (staticContext) return staticContext;\n\n    var tempId = getTempId(scope);\n    if (bind.object) {\n      bind.callee = t.sequenceExpression([t.assignmentExpression(\"=\", tempId, bind.object), bind.callee]);\n    } else {\n      bind.callee.object = t.assignmentExpression(\"=\", tempId, bind.callee.object);\n    }\n    return tempId;\n  }\n\n  return {\n    inherits: require(\"babel-plugin-syntax-function-bind\"),\n\n    visitor: {\n      CallExpression: function CallExpression(_ref2) {\n        var node = _ref2.node,\n            scope = _ref2.scope;\n\n        var bind = node.callee;\n        if (!t.isBindExpression(bind)) return;\n\n        var context = inferBindContext(bind, scope);\n        node.callee = t.memberExpression(bind.callee, t.identifier(\"call\"));\n        node.arguments.unshift(context);\n      },\n      BindExpression: function BindExpression(path) {\n        var node = path.node,\n            scope = path.scope;\n\n        var context = inferBindContext(node, scope);\n        path.replaceWith(t.callExpression(t.memberExpression(node.callee, t.identifier(\"bind\")), [context]));\n      }\n    }\n  };\n};\n\nmodule.exports = exports[\"default\"];"]}