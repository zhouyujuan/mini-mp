{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nexports.__esModule = true;\n\nvar _getIterator2 = require(\"babel-runtime/core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _symbol = require(\"babel-runtime/core-js/symbol\");\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nexports.default = function (_ref) {\n  var t = _ref.types;\n\n  function Property(path, node, scope, getObjectRef, file) {\n    var replaceSupers = new _babelHelperReplaceSupers2.default({\n      getObjectRef: getObjectRef,\n      methodNode: node,\n      methodPath: path,\n      isStatic: true,\n      scope: scope,\n      file: file\n    });\n\n    replaceSupers.replace();\n  }\n\n  var CONTAINS_SUPER = (0, _symbol2.default)();\n\n  return {\n    visitor: {\n      Super: function Super(path) {\n        var parentObj = path.findParent(function (path) {\n          return path.isObjectExpression();\n        });\n        if (parentObj) parentObj.node[CONTAINS_SUPER] = true;\n      },\n\n\n      ObjectExpression: {\n        exit: function exit(path, file) {\n          if (!path.node[CONTAINS_SUPER]) return;\n\n          var objectRef = void 0;\n          var getObjectRef = function getObjectRef() {\n            return objectRef = objectRef || path.scope.generateUidIdentifier(\"obj\");\n          };\n\n          var propPaths = path.get(\"properties\");\n          for (var _iterator = propPaths, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n            var _ref2;\n\n            if (_isArray) {\n              if (_i >= _iterator.length) break;\n              _ref2 = _iterator[_i++];\n            } else {\n              _i = _iterator.next();\n              if (_i.done) break;\n              _ref2 = _i.value;\n            }\n\n            var propPath = _ref2;\n\n            if (propPath.isObjectProperty()) propPath = propPath.get(\"value\");\n            Property(propPath, propPath.node, path.scope, getObjectRef, file);\n          }\n\n          if (objectRef) {\n            path.scope.push({ id: objectRef });\n            path.replaceWith(t.assignmentExpression(\"=\", objectRef, path.node));\n          }\n        }\n      }\n    }\n  };\n};\n\nvar _babelHelperReplaceSupers = require(\"babel-helper-replace-supers\");\n\nvar _babelHelperReplaceSupers2 = _interopRequireDefault(_babelHelperReplaceSupers);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports[\"default\"];"]}